# this is an auto generated file. This will be overwritten

query GetPlant($id: ID!) {
  getPlant(id: $id) {
    id
    name
    operators {
      nextToken
      startedAt
      __typename
    }
    inflowEntries {
      nextToken
      startedAt
      __typename
    }
    rawEntries {
      nextToken
      startedAt
      __typename
    }
    clarifiedEntries {
      nextToken
      startedAt
      __typename
    }
    filteredEntries {
      nextToken
      startedAt
      __typename
    }
    calibrationEntries {
      nextToken
      startedAt
      __typename
    }
    doseEntries {
      nextToken
      startedAt
      __typename
    }
    feedbackEntries {
      nextToken
      startedAt
      __typename
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListPlants(
  $filter: ModelPlantFilterInput
  $limit: Int
  $nextToken: String
) {
  listPlants(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncPlants(
  $filter: ModelPlantFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPlants(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetOperator($id: ID!) {
  getOperator(id: $id) {
    id
    name
    plantID
    inflowEntries {
      nextToken
      startedAt
      __typename
    }
    rawEntries {
      nextToken
      startedAt
      __typename
    }
    clarifiedEntries {
      nextToken
      startedAt
      __typename
    }
    filteredEntries {
      nextToken
      startedAt
      __typename
    }
    calibrationEntries {
      nextToken
      startedAt
      __typename
    }
    doseEntries {
      nextToken
      startedAt
      __typename
    }
    feedbackEntries {
      nextToken
      startedAt
      __typename
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListOperators(
  $filter: ModelOperatorFilterInput
  $limit: Int
  $nextToken: String
) {
  listOperators(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncOperators(
  $filter: ModelOperatorFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncOperators(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetInflowEntry($id: ID!) {
  getInflowEntry(id: $id) {
    id
    createdAt
    plantID
    operatorID
    inflowRate
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListInflowEntries(
  $filter: ModelInflowEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  listInflowEntries(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      createdAt
      plantID
      operatorID
      inflowRate
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncInflowEntries(
  $filter: ModelInflowEntryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncInflowEntries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      inflowRate
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetRawEntry($id: ID!) {
  getRawEntry(id: $id) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListRawEntries(
  $filter: ModelRawEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  listRawEntries(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidity
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncRawEntries(
  $filter: ModelRawEntryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncRawEntries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidity
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetClarifiedEntry($id: ID!) {
  getClarifiedEntry(id: $id) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListClarifiedEntries(
  $filter: ModelClarifiedEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  listClarifiedEntries(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidity
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncClarifiedEntries(
  $filter: ModelClarifiedEntryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncClarifiedEntries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidity
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetFilteredEntry($id: ID!) {
  getFilteredEntry(id: $id) {
    id
    createdAt
    plantID
    operatorID
    turbidities
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListFilteredEntries(
  $filter: ModelFilteredEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  listFilteredEntries(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidities
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncFilteredEntries(
  $filter: ModelFilteredEntryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncFilteredEntries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidities
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetCalibrationEntry($id: ID!) {
  getCalibrationEntry(id: $id) {
    id
    createdAt
    plantID
    operatorID
    chemicalType
    coagType
    sliderPosition
    inflowRate
    startVolume
    endVolume
    timeElapsed
    dose
    flowRate
    activeTank
    tankVolume
    doseEntry {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      targetDose
      updatedSliderPosition
      updatedFlowRate
      calibrationEntryID
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    calibrationEntryDoseEntryId
    __typename
  }
}

query ListCalibrationEntries(
  $filter: ModelCalibrationEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  listCalibrationEntries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      coagType
      sliderPosition
      inflowRate
      startVolume
      endVolume
      timeElapsed
      dose
      flowRate
      activeTank
      tankVolume
      updatedAt
      _version
      _deleted
      _lastChangedAt
      calibrationEntryDoseEntryId
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncCalibrationEntries(
  $filter: ModelCalibrationEntryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCalibrationEntries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      coagType
      sliderPosition
      inflowRate
      startVolume
      endVolume
      timeElapsed
      dose
      flowRate
      activeTank
      tankVolume
      updatedAt
      _version
      _deleted
      _lastChangedAt
      calibrationEntryDoseEntryId
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetDoseEntry($id: ID!) {
  getDoseEntry(id: $id) {
    id
    createdAt
    plantID
    operatorID
    chemicalType
    targetDose
    updatedSliderPosition
    updatedFlowRate
    calibrationEntryID
    calibrationEntry {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      coagType
      sliderPosition
      inflowRate
      startVolume
      endVolume
      timeElapsed
      dose
      flowRate
      activeTank
      tankVolume
      updatedAt
      _version
      _deleted
      _lastChangedAt
      calibrationEntryDoseEntryId
      __typename
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListDoseEntries(
  $filter: ModelDoseEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  listDoseEntries(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      targetDose
      updatedSliderPosition
      updatedFlowRate
      calibrationEntryID
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncDoseEntries(
  $filter: ModelDoseEntryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncDoseEntries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      targetDose
      updatedSliderPosition
      updatedFlowRate
      calibrationEntryID
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query GetFeedbackEntry($id: ID!) {
  getFeedbackEntry(id: $id) {
    id
    createdAt
    plantID
    operatorID
    feedback
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

query ListFeedbackEntries(
  $filter: ModelFeedbackEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  listFeedbackEntries(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      createdAt
      plantID
      operatorID
      feedback
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query SyncFeedbackEntries(
  $filter: ModelFeedbackEntryFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncFeedbackEntries(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      feedback
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query OperatorsByPlantIDAndId(
  $plantID: ID!
  $id: ModelIDKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelOperatorFilterInput
  $limit: Int
  $nextToken: String
) {
  operatorsByPlantIDAndId(
    plantID: $plantID
    id: $id
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query InflowEntriesByPlantIDAndCreatedAt(
  $plantID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelInflowEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  inflowEntriesByPlantIDAndCreatedAt(
    plantID: $plantID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      inflowRate
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query InflowEntriesByOperatorIDAndCreatedAt(
  $operatorID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelInflowEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  inflowEntriesByOperatorIDAndCreatedAt(
    operatorID: $operatorID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      inflowRate
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query RawEntriesByPlantIDAndCreatedAt(
  $plantID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelRawEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  rawEntriesByPlantIDAndCreatedAt(
    plantID: $plantID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidity
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query RawEntriesByOperatorIDAndCreatedAt(
  $operatorID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelRawEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  rawEntriesByOperatorIDAndCreatedAt(
    operatorID: $operatorID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidity
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query ClarifiedEntriesByPlantIDAndCreatedAt(
  $plantID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelClarifiedEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  clarifiedEntriesByPlantIDAndCreatedAt(
    plantID: $plantID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidity
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query ClarifiedEntriesByOperatorIDAndCreatedAt(
  $operatorID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelClarifiedEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  clarifiedEntriesByOperatorIDAndCreatedAt(
    operatorID: $operatorID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidity
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query FilteredEntriesByPlantIDAndCreatedAt(
  $plantID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelFilteredEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  filteredEntriesByPlantIDAndCreatedAt(
    plantID: $plantID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidities
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query FilteredEntriesByOperatorIDAndCreatedAt(
  $operatorID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelFilteredEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  filteredEntriesByOperatorIDAndCreatedAt(
    operatorID: $operatorID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      turbidities
      notes
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query CalibrationEntriesByPlantIDAndCreatedAt(
  $plantID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelCalibrationEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  calibrationEntriesByPlantIDAndCreatedAt(
    plantID: $plantID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      coagType
      sliderPosition
      inflowRate
      startVolume
      endVolume
      timeElapsed
      dose
      flowRate
      activeTank
      tankVolume
      updatedAt
      _version
      _deleted
      _lastChangedAt
      calibrationEntryDoseEntryId
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query CalibrationEntriesByOperatorIDAndCreatedAt(
  $operatorID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelCalibrationEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  calibrationEntriesByOperatorIDAndCreatedAt(
    operatorID: $operatorID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      coagType
      sliderPosition
      inflowRate
      startVolume
      endVolume
      timeElapsed
      dose
      flowRate
      activeTank
      tankVolume
      updatedAt
      _version
      _deleted
      _lastChangedAt
      calibrationEntryDoseEntryId
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query DoseEntriesByPlantIDAndCreatedAt(
  $plantID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelDoseEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  doseEntriesByPlantIDAndCreatedAt(
    plantID: $plantID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      targetDose
      updatedSliderPosition
      updatedFlowRate
      calibrationEntryID
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query DoseEntriesByOperatorIDAndCreatedAt(
  $operatorID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelDoseEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  doseEntriesByOperatorIDAndCreatedAt(
    operatorID: $operatorID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      targetDose
      updatedSliderPosition
      updatedFlowRate
      calibrationEntryID
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query DoseEntriesByCalibrationEntryID(
  $calibrationEntryID: ID!
  $sortDirection: ModelSortDirection
  $filter: ModelDoseEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  doseEntriesByCalibrationEntryID(
    calibrationEntryID: $calibrationEntryID
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      targetDose
      updatedSliderPosition
      updatedFlowRate
      calibrationEntryID
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query FeedbackEntriesByPlantIDAndCreatedAt(
  $plantID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelFeedbackEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  feedbackEntriesByPlantIDAndCreatedAt(
    plantID: $plantID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      feedback
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}

query FeedbackEntriesByOperatorIDAndCreatedAt(
  $operatorID: ID!
  $createdAt: ModelStringKeyConditionInput
  $sortDirection: ModelSortDirection
  $filter: ModelFeedbackEntryFilterInput
  $limit: Int
  $nextToken: String
) {
  feedbackEntriesByOperatorIDAndCreatedAt(
    operatorID: $operatorID
    createdAt: $createdAt
    sortDirection: $sortDirection
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      id
      createdAt
      plantID
      operatorID
      feedback
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    nextToken
    startedAt
    __typename
  }
}
