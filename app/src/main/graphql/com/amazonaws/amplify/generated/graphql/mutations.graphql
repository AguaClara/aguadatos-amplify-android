# this is an auto generated file. This will be overwritten

mutation CreatePlant(
  $input: CreatePlantInput!
  $condition: ModelPlantConditionInput
) {
  createPlant(input: $input, condition: $condition) {
    id
    name
    operators {
      nextToken
      startedAt
      __typename
    }
    inflowEntries {
      nextToken
      startedAt
      __typename
    }
    rawEntries {
      nextToken
      startedAt
      __typename
    }
    clarifiedEntries {
      nextToken
      startedAt
      __typename
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation UpdatePlant(
  $input: UpdatePlantInput!
  $condition: ModelPlantConditionInput
) {
  updatePlant(input: $input, condition: $condition) {
    id
    name
    operators {
      nextToken
      startedAt
      __typename
    }
    inflowEntries {
      nextToken
      startedAt
      __typename
    }
    rawEntries {
      nextToken
      startedAt
      __typename
    }
    clarifiedEntries {
      nextToken
      startedAt
      __typename
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation DeletePlant(
  $input: DeletePlantInput!
  $condition: ModelPlantConditionInput
) {
  deletePlant(input: $input, condition: $condition) {
    id
    name
    operators {
      nextToken
      startedAt
      __typename
    }
    inflowEntries {
      nextToken
      startedAt
      __typename
    }
    rawEntries {
      nextToken
      startedAt
      __typename
    }
    clarifiedEntries {
      nextToken
      startedAt
      __typename
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation CreateOperator(
  $input: CreateOperatorInput!
  $condition: ModelOperatorConditionInput
) {
  createOperator(input: $input, condition: $condition) {
    id
    name
    plantID
    inflowEntries {
      nextToken
      startedAt
      __typename
    }
    rawEntries {
      nextToken
      startedAt
      __typename
    }
    clarifiedEntries {
      nextToken
      startedAt
      __typename
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation UpdateOperator(
  $input: UpdateOperatorInput!
  $condition: ModelOperatorConditionInput
) {
  updateOperator(input: $input, condition: $condition) {
    id
    name
    plantID
    inflowEntries {
      nextToken
      startedAt
      __typename
    }
    rawEntries {
      nextToken
      startedAt
      __typename
    }
    clarifiedEntries {
      nextToken
      startedAt
      __typename
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation DeleteOperator(
  $input: DeleteOperatorInput!
  $condition: ModelOperatorConditionInput
) {
  deleteOperator(input: $input, condition: $condition) {
    id
    name
    plantID
    inflowEntries {
      nextToken
      startedAt
      __typename
    }
    rawEntries {
      nextToken
      startedAt
      __typename
    }
    clarifiedEntries {
      nextToken
      startedAt
      __typename
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation CreateInflowEntry(
  $input: CreateInflowEntryInput!
  $condition: ModelInflowEntryConditionInput
) {
  createInflowEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    inflowRate
    notes
    plant {
      id
      name
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    operator {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation UpdateInflowEntry(
  $input: UpdateInflowEntryInput!
  $condition: ModelInflowEntryConditionInput
) {
  updateInflowEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    inflowRate
    notes
    plant {
      id
      name
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    operator {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation DeleteInflowEntry(
  $input: DeleteInflowEntryInput!
  $condition: ModelInflowEntryConditionInput
) {
  deleteInflowEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    inflowRate
    notes
    plant {
      id
      name
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    operator {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation CreateRawEntry(
  $input: CreateRawEntryInput!
  $condition: ModelRawEntryConditionInput
) {
  createRawEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    plant {
      id
      name
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    operator {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation UpdateRawEntry(
  $input: UpdateRawEntryInput!
  $condition: ModelRawEntryConditionInput
) {
  updateRawEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    plant {
      id
      name
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    operator {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation DeleteRawEntry(
  $input: DeleteRawEntryInput!
  $condition: ModelRawEntryConditionInput
) {
  deleteRawEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    plant {
      id
      name
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    operator {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation CreateClarifiedEntry(
  $input: CreateClarifiedEntryInput!
  $condition: ModelClarifiedEntryConditionInput
) {
  createClarifiedEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    plant {
      id
      name
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    operator {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation UpdateClarifiedEntry(
  $input: UpdateClarifiedEntryInput!
  $condition: ModelClarifiedEntryConditionInput
) {
  updateClarifiedEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    plant {
      id
      name
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    operator {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}

mutation DeleteClarifiedEntry(
  $input: DeleteClarifiedEntryInput!
  $condition: ModelClarifiedEntryConditionInput
) {
  deleteClarifiedEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    plant {
      id
      name
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    operator {
      id
      name
      plantID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      __typename
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    __typename
  }
}
