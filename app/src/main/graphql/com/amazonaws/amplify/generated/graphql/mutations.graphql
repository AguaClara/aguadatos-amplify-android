# this is an auto generated file. This will be overwritten

mutation CreatePlant(
  $input: CreatePlantInput!
  $condition: ModelPlantConditionInput
) {
  createPlant(input: $input, condition: $condition) {
    id
    name
    operators {
      items {
        id
        name
        plantID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    inflowEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        inflowRate
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    rawEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    clarifiedEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    filteredEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidities
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    calibrationEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        coagType
        sliderPosition
        inflowRate
        startVolume
        endVolume
        timeElapsed
        dose
        flowRate
        activeTank
        tankVolume
        updatedAt
        _version
        _deleted
        _lastChangedAt
        calibrationEntryDoseEntryId
      }
      nextToken
      startedAt
    }
    doseEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        targetDose
        updatedSliderPosition
        updatedFlowRate
        calibrationEntryID
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    feedbackEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        feedback
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdatePlant(
  $input: UpdatePlantInput!
  $condition: ModelPlantConditionInput
) {
  updatePlant(input: $input, condition: $condition) {
    id
    name
    operators {
      items {
        id
        name
        plantID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    inflowEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        inflowRate
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    rawEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    clarifiedEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    filteredEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidities
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    calibrationEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        coagType
        sliderPosition
        inflowRate
        startVolume
        endVolume
        timeElapsed
        dose
        flowRate
        activeTank
        tankVolume
        updatedAt
        _version
        _deleted
        _lastChangedAt
        calibrationEntryDoseEntryId
      }
      nextToken
      startedAt
    }
    doseEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        targetDose
        updatedSliderPosition
        updatedFlowRate
        calibrationEntryID
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    feedbackEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        feedback
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeletePlant(
  $input: DeletePlantInput!
  $condition: ModelPlantConditionInput
) {
  deletePlant(input: $input, condition: $condition) {
    id
    name
    operators {
      items {
        id
        name
        plantID
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    inflowEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        inflowRate
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    rawEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    clarifiedEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    filteredEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidities
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    calibrationEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        coagType
        sliderPosition
        inflowRate
        startVolume
        endVolume
        timeElapsed
        dose
        flowRate
        activeTank
        tankVolume
        updatedAt
        _version
        _deleted
        _lastChangedAt
        calibrationEntryDoseEntryId
      }
      nextToken
      startedAt
    }
    doseEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        targetDose
        updatedSliderPosition
        updatedFlowRate
        calibrationEntryID
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    feedbackEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        feedback
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateOperator(
  $input: CreateOperatorInput!
  $condition: ModelOperatorConditionInput
) {
  createOperator(input: $input, condition: $condition) {
    id
    name
    plantID
    inflowEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        inflowRate
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    rawEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    clarifiedEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    filteredEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidities
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    calibrationEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        coagType
        sliderPosition
        inflowRate
        startVolume
        endVolume
        timeElapsed
        dose
        flowRate
        activeTank
        tankVolume
        updatedAt
        _version
        _deleted
        _lastChangedAt
        calibrationEntryDoseEntryId
      }
      nextToken
      startedAt
    }
    doseEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        targetDose
        updatedSliderPosition
        updatedFlowRate
        calibrationEntryID
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    feedbackEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        feedback
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateOperator(
  $input: UpdateOperatorInput!
  $condition: ModelOperatorConditionInput
) {
  updateOperator(input: $input, condition: $condition) {
    id
    name
    plantID
    inflowEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        inflowRate
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    rawEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    clarifiedEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    filteredEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidities
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    calibrationEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        coagType
        sliderPosition
        inflowRate
        startVolume
        endVolume
        timeElapsed
        dose
        flowRate
        activeTank
        tankVolume
        updatedAt
        _version
        _deleted
        _lastChangedAt
        calibrationEntryDoseEntryId
      }
      nextToken
      startedAt
    }
    doseEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        targetDose
        updatedSliderPosition
        updatedFlowRate
        calibrationEntryID
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    feedbackEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        feedback
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteOperator(
  $input: DeleteOperatorInput!
  $condition: ModelOperatorConditionInput
) {
  deleteOperator(input: $input, condition: $condition) {
    id
    name
    plantID
    inflowEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        inflowRate
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    rawEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    clarifiedEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidity
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    filteredEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        turbidities
        notes
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    calibrationEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        coagType
        sliderPosition
        inflowRate
        startVolume
        endVolume
        timeElapsed
        dose
        flowRate
        activeTank
        tankVolume
        updatedAt
        _version
        _deleted
        _lastChangedAt
        calibrationEntryDoseEntryId
      }
      nextToken
      startedAt
    }
    doseEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        targetDose
        updatedSliderPosition
        updatedFlowRate
        calibrationEntryID
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    feedbackEntries {
      items {
        id
        createdAt
        plantID
        operatorID
        feedback
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateInflowEntry(
  $input: CreateInflowEntryInput!
  $condition: ModelInflowEntryConditionInput
) {
  createInflowEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    inflowRate
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateInflowEntry(
  $input: UpdateInflowEntryInput!
  $condition: ModelInflowEntryConditionInput
) {
  updateInflowEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    inflowRate
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteInflowEntry(
  $input: DeleteInflowEntryInput!
  $condition: ModelInflowEntryConditionInput
) {
  deleteInflowEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    inflowRate
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateRawEntry(
  $input: CreateRawEntryInput!
  $condition: ModelRawEntryConditionInput
) {
  createRawEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateRawEntry(
  $input: UpdateRawEntryInput!
  $condition: ModelRawEntryConditionInput
) {
  updateRawEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteRawEntry(
  $input: DeleteRawEntryInput!
  $condition: ModelRawEntryConditionInput
) {
  deleteRawEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateClarifiedEntry(
  $input: CreateClarifiedEntryInput!
  $condition: ModelClarifiedEntryConditionInput
) {
  createClarifiedEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateClarifiedEntry(
  $input: UpdateClarifiedEntryInput!
  $condition: ModelClarifiedEntryConditionInput
) {
  updateClarifiedEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteClarifiedEntry(
  $input: DeleteClarifiedEntryInput!
  $condition: ModelClarifiedEntryConditionInput
) {
  deleteClarifiedEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidity
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateFilteredEntry(
  $input: CreateFilteredEntryInput!
  $condition: ModelFilteredEntryConditionInput
) {
  createFilteredEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidities
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateFilteredEntry(
  $input: UpdateFilteredEntryInput!
  $condition: ModelFilteredEntryConditionInput
) {
  updateFilteredEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidities
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteFilteredEntry(
  $input: DeleteFilteredEntryInput!
  $condition: ModelFilteredEntryConditionInput
) {
  deleteFilteredEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    turbidities
    notes
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateCalibrationEntry(
  $input: CreateCalibrationEntryInput!
  $condition: ModelCalibrationEntryConditionInput
) {
  createCalibrationEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    chemicalType
    coagType
    sliderPosition
    inflowRate
    startVolume
    endVolume
    timeElapsed
    dose
    flowRate
    activeTank
    tankVolume
    doseEntry {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      targetDose
      updatedSliderPosition
      updatedFlowRate
      calibrationEntryID
      calibrationEntry {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        coagType
        sliderPosition
        inflowRate
        startVolume
        endVolume
        timeElapsed
        dose
        flowRate
        activeTank
        tankVolume
        updatedAt
        _version
        _deleted
        _lastChangedAt
        calibrationEntryDoseEntryId
      }
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    calibrationEntryDoseEntryId
  }
}
mutation UpdateCalibrationEntry(
  $input: UpdateCalibrationEntryInput!
  $condition: ModelCalibrationEntryConditionInput
) {
  updateCalibrationEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    chemicalType
    coagType
    sliderPosition
    inflowRate
    startVolume
    endVolume
    timeElapsed
    dose
    flowRate
    activeTank
    tankVolume
    doseEntry {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      targetDose
      updatedSliderPosition
      updatedFlowRate
      calibrationEntryID
      calibrationEntry {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        coagType
        sliderPosition
        inflowRate
        startVolume
        endVolume
        timeElapsed
        dose
        flowRate
        activeTank
        tankVolume
        updatedAt
        _version
        _deleted
        _lastChangedAt
        calibrationEntryDoseEntryId
      }
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    calibrationEntryDoseEntryId
  }
}
mutation DeleteCalibrationEntry(
  $input: DeleteCalibrationEntryInput!
  $condition: ModelCalibrationEntryConditionInput
) {
  deleteCalibrationEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    chemicalType
    coagType
    sliderPosition
    inflowRate
    startVolume
    endVolume
    timeElapsed
    dose
    flowRate
    activeTank
    tankVolume
    doseEntry {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      targetDose
      updatedSliderPosition
      updatedFlowRate
      calibrationEntryID
      calibrationEntry {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        coagType
        sliderPosition
        inflowRate
        startVolume
        endVolume
        timeElapsed
        dose
        flowRate
        activeTank
        tankVolume
        updatedAt
        _version
        _deleted
        _lastChangedAt
        calibrationEntryDoseEntryId
      }
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
    calibrationEntryDoseEntryId
  }
}
mutation CreateDoseEntry(
  $input: CreateDoseEntryInput!
  $condition: ModelDoseEntryConditionInput
) {
  createDoseEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    chemicalType
    targetDose
    updatedSliderPosition
    updatedFlowRate
    calibrationEntryID
    calibrationEntry {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      coagType
      sliderPosition
      inflowRate
      startVolume
      endVolume
      timeElapsed
      dose
      flowRate
      activeTank
      tankVolume
      doseEntry {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        targetDose
        updatedSliderPosition
        updatedFlowRate
        calibrationEntryID
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      updatedAt
      _version
      _deleted
      _lastChangedAt
      calibrationEntryDoseEntryId
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateDoseEntry(
  $input: UpdateDoseEntryInput!
  $condition: ModelDoseEntryConditionInput
) {
  updateDoseEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    chemicalType
    targetDose
    updatedSliderPosition
    updatedFlowRate
    calibrationEntryID
    calibrationEntry {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      coagType
      sliderPosition
      inflowRate
      startVolume
      endVolume
      timeElapsed
      dose
      flowRate
      activeTank
      tankVolume
      doseEntry {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        targetDose
        updatedSliderPosition
        updatedFlowRate
        calibrationEntryID
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      updatedAt
      _version
      _deleted
      _lastChangedAt
      calibrationEntryDoseEntryId
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteDoseEntry(
  $input: DeleteDoseEntryInput!
  $condition: ModelDoseEntryConditionInput
) {
  deleteDoseEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    chemicalType
    targetDose
    updatedSliderPosition
    updatedFlowRate
    calibrationEntryID
    calibrationEntry {
      id
      createdAt
      plantID
      operatorID
      chemicalType
      coagType
      sliderPosition
      inflowRate
      startVolume
      endVolume
      timeElapsed
      dose
      flowRate
      activeTank
      tankVolume
      doseEntry {
        id
        createdAt
        plantID
        operatorID
        chemicalType
        targetDose
        updatedSliderPosition
        updatedFlowRate
        calibrationEntryID
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      updatedAt
      _version
      _deleted
      _lastChangedAt
      calibrationEntryDoseEntryId
    }
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateFeedbackEntry(
  $input: CreateFeedbackEntryInput!
  $condition: ModelFeedbackEntryConditionInput
) {
  createFeedbackEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    feedback
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateFeedbackEntry(
  $input: UpdateFeedbackEntryInput!
  $condition: ModelFeedbackEntryConditionInput
) {
  updateFeedbackEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    feedback
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteFeedbackEntry(
  $input: DeleteFeedbackEntryInput!
  $condition: ModelFeedbackEntryConditionInput
) {
  deleteFeedbackEntry(input: $input, condition: $condition) {
    id
    createdAt
    plantID
    operatorID
    feedback
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
