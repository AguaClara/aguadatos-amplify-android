# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/auth
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Plant @model {
  id: ID!
  operators: [Operator] @hasMany(indexName: "byPlant", fields: ["id"])
  }

type Operator @model {
  id: ID!
  name: String! @index(name: "byName", queryField: "operatorByName", sortKeyFields: ["id"])
  plantID: ID! @index(name: "byPlant", sortKeyFields: ["id"])
  plantFlowEntries: [PlantFlowEntry] @hasMany(indexName: "pfByPlantByOperatorByDate", fields: ["id"])
  rawWaterEntries: [RawWaterEntry] @hasMany(indexName: "rwByPlantByOperatorByDate", fields: ["id"])
  clarifiedWaterEntries: [ClarifiedWaterEntry] @hasMany(indexName: "cwByPlantByOperatorByDate", fields: ["id"])
  filteredWaterEntries: [FilteredWaterEntry] @hasMany(indexName: "fwByPlantByOperatorByDate", fields: ["id"])
  coagulantCalibrationEntries: [CoagulantCalibrationEntry] @hasMany(indexName: "coCalByPlantByOperatorByDate", fields: ["id"])
  coagulantChangeDoseEntries: [CoagulantChangeDoseEntry] @hasMany(indexName: "coChByPlantByOperatorByDate", fields: ["id"])
  chlorineCalibrationEntries: [ChlorineCalibrationEntry] @hasMany(indexName: "clCalByPlantByOperatorByDate", fields: ["id"])
  chlorineChangeDoseEntries: [ChlorineChangeDoseEntry] @hasMany(indexName: "clChByPlantByOperatorByDate", fields: ["id"])
  feedbackEntries: [FeedbackEntry] @hasMany(indexName: "fByPlantByOperatorByDate", fields: ["id"])
}

type PlantFlowEntry @model {
  id: ID!
  plantID: ID! @index(name: "pfByPlantByOperatorByDate", sortKeyFields:
  ["operatorID","creationDateTime"])
  operatorID: ID! @index(name: "byOperator")
  creationDateTime: AWSDateTime!
  additionalNotes: String!
  inflowRate: Float!
}

type RawWaterEntry @model {
  id: ID!
  plantID: ID! @index(name: "rwByPlantByOperatorByDate", sortKeyFields:
  ["operatorID","creationDateTime"])
  operatorID: ID! @index(name: "byOperator")
  creationDateTime: AWSDateTime!
  additionalNotes: String!
  turbidity: Float!
}

type ClarifiedWaterEntry @model {
  id: ID!
  plantID: ID! @index(name: "cwByPlantByOperatorByDate", sortKeyFields:
  ["operatorID","creationDateTime"])
  operatorID: ID! @index(name: "byOperator")
  creationDateTime: AWSDateTime!
  additionalNotes: String!
  turbidity: Float!
}

type FilteredWaterEntry @model {
  id: ID!
  plantID: ID! @index(name: "fwByPlantByOperatorByDate", sortKeyFields:
  ["operatorID","creationDateTime"])
  operatorID: ID! @index(name: "byOperator")
  creationDateTime: AWSDateTime!
  additionalNotes: String!
  turbidityValues: [Float]
}

type CoagulantCalibrationEntry @model {
  id: ID!
  plantID: ID! @index(name: "coCalByPlantByOperatorByDate", sortKeyFields:
  ["operatorID","creationDateTime"])
  operatorID: ID! @index(name: "byOperator")
  creationDateTime: AWSDateTime!
  sliderPosition: Float!
  inflowRate: Float!
  startVolume: Float!
  endVolume: Float!
  timeElapsed: Int!
  chemicalDose: Float!
  chemicalFlowRate: Float!
  activeTankVolume: Float!
  chemicalType: Float!
}

type CoagulantChangeDoseEntry @model {
  id: ID!
  plantID: ID! @index(name: "coChByPlantByOperatorByDate", sortKeyFields:
  ["operatorID","creationDateTime"])
  operatorID: ID! @index(name: "byOperator")
  creationDateTime: AWSDateTime!
  chemicalFlowRate: Float!
  chemicalDose: Float!
  sliderPosition: Float!
  targetChemicalDose: Float!
  updatedSliderPosition: Float!
  updatedChemicalFlowRate: Float!
  chemicalType: Float!
}

type ChlorineCalibrationEntry @model {
  id: ID!
  plantID: ID! @index(name: "clCalByPlantByOperatorByDate", sortKeyFields:
  ["operatorID","creationDateTime"])
  operatorID: ID! @index(name: "byOperator")
  creationDateTime: AWSDateTime!
  sliderPosition: Float!
  inflowRate: Float!
  startVolume: Float!
  endVolume: Float!
  timeElapsed: Int!
  chemicalDose: Float!
  chemicalFlowRate: Float!
  activeTankVolume: Float!
  chemicalType: Float!
}

type ChlorineChangeDoseEntry @model {
  id: ID!
  plantID: ID! @index(name: "clChByPlantByOperatorByDate", sortKeyFields:
  ["operatorID","creationDateTime"])
  operatorID: ID! @index(name: "byOperator")
  creationDateTime: AWSDateTime!
  chemicalFlowRate: Float!
  chemicalDose: Float!
  sliderPosition: Float!
  targetChemicalDose: Float!
  updatedSliderPosition: Float!
  updatedChemicalFlowRate: Float!
  chemicalType: Float!
}

type FeedbackEntry @model {
  id: ID!
  plantID: ID! @index(name: "fByPlantByOperatorByDate", sortKeyFields:
  ["operatorID","creationDateTime"])
  operatorID: ID! @index(name: "byOperator")
  creationDateTime: AWSDateTime!
  feedback: String!
}